from moviepy.editor import *
import sys
from PyQt5 import QtCore, QtGui, QtWidgets, uic
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QMainWindow, QInputDialog
from PyQt5.QtWidgets import QLabel, QLineEdit, QFileDialog, QMenu, QMenuBar, QDialog
from screen1 import  Ui_Dialog


class VideoEdit(QMainWindow):
    def __init__(self):
        super().__init__()
        uic.loadUi('screen.ui', self)  ## Загружаем дизайн
        self.setWindowTitle('VideoEditor')

        self.menuBarCreate()

    def menuBarCreate(self):
        self.menu_bar = QMenuBar(self)
        self.setMenuBar(self.menu_bar)

        ## Меню работы с файлом
        fileMenu = QMenu('&Файл', self)
        self.menu_bar.addMenu(fileMenu)

        fileMenu.addAction('Открыть', self.file_choose)
        fileMenu.addAction('Сохранить, как...', self.action_clicked)
        fileMenu.addAction('Выход из программы', self.action_clicked)

        ## Меню работы с фильтрами
        filterMenu = QMenu('&Фильтры', self)
        self.menu_bar.addMenu(filterMenu)

        ## Меню работы с видео
        vidMenu = QMenu('&Видео', self)
        self.menu_bar.addMenu(vidMenu)

        vid_Rotate = vidMenu.addMenu('&Поворот видео')
        vid_Rotate.addAction('Поворот на 90 градусов по часовой', self.action_clicked)
        vid_Rotate.addAction('Поворот на 90 против по часовой', self.action_clicked)
        vid_Rotate.addAction('Поворот на 180 градусов', self.action_clicked)

        vidAdd = vidMenu.addMenu('&Склеить видео')
        vidAdd.addAction('Перед', self.action_clicked)
        vidAdd.addAction('После', self.action_clicked)

        vidMenu.addAction('Обрезать', self.action_clicked)

        ## Меню работы со звуком
        sound_Menu = QMenu('&Звук',self)
        self.menu_bar.addMenu(sound_Menu)

        volumeChange = sound_Menu.addMenu('&Изменить громкость')
        volumeChange.addAction('Уменьшить', self.action_clicked)
        volumeChange.addAction('Увеличить', self.action_clicked)

        sound_Menu.addAction('Изменить звук вашего видео', self.action_clicked)

    def file_choose(self):
        global main_vid, filename
        ## Получаем путь к папке
        filename, filetype = QFileDialog.getOpenFileName(self,
                                                         "Выбрать файл",
                                                         ".",
                                                         "MP4 Files(*.mp4)")

        ## Создаём переменную с видеофайлом
        main_vid = VideoFileClip(filename)

        self.with_file_work.setText(f"Идёт работа с видеофайлом: {filename}")
        self.changes.setText('Изменения в вдео:')

    @QtCore.pyqtSlot()
    def action_clicked(self):
        global main_vid
        ## Выход из программы
        if (self.sender()).text() == 'Выход из программы':
            sys.exit(app.exec_())

        ## Сохраняем конечный видеофайл
        if (self.sender()).text() == 'Сохранить, как...':
            dirlist = QFileDialog.getExistingDirectory(self, "Выбрать папку", ".")


            main_vid.write_videofile('movie.mp4')
            print(dirlist)

        ## Повороот видео
        if (self.sender()).text() == 'Поворот на 90 градусов по часовой':
            main_vid = main_vid.rotate(-90)
            self.changes.setText(self.changes.text() + f"\n Поворот на 90 градусов по часовой")

        if (self.sender()).text() == 'Поворот на 90 против по часовой':
            main_vid = main_vid.rotate(90)
            self.changes.setText(self.changes.text() + f"\n Поворот на 90 против по часовой")

        if (self.sender()).text() == 'Поворот на 180 градусов':
            main_vid = main_vid.rotate(180)
            self.changes.setText(self.changes.text() + f"\n Поворот на 180 градусов")

        ## Склеивание видео
        if (self.sender()).text() == 'Перед':
            filename2, filetype = QFileDialog.getOpenFileName(self,
                                                             "Выбрать файл",
                                                             ".",
                                                             "MP4 Files(*.mp4)")
            clip2 = VideoFileClip(filename2)

            main_vid = concatenate_videoclips([clip2, main_vid])
            self.changes.setText(self.changes.text() + f"\n Перед видео добавлено {filename2}")

        if (self.sender()).text() == 'После':
            filename2, filetype = QFileDialog.getOpenFileName(self,
                                                             "Выбрать файл",
                                                             ".",
                                                             "MP4 Files(*.mp4)")
            clip2 = VideoFileClip(filename2)

            main_vid = concatenate_videoclips([main_vid, clip2])
            self.changes.setText(self.changes.text() + f"\n После видео добавлено {filename2}")

        ## Обрезка видео
        if (self.sender()).text() == 'Обрезать':
            global vid_lenght1
            ##vid_lenght1 = main_vid.duration
            ##print(self.vid_lenght1)
            self.openCutChanges()

        ## Работа со звуком
        if (self.sender()).text() == 'Уменьшить':
            self.volume_Decrease()
            main_vid = main_vid.volumex(round(self.num_crease, 2))
            self.changes.setText(self.changes.text() + f"\n Громкость видео уменьшена в {round(self.num_crease, 2)} раз")

        if (self.sender()).text() == 'Увеличить':
            self.volume_Increase()
            main_vid = main_vid.volumex(self.num_crease)
            self.changes.setText(self.changes.text() + f"\n Громкость видео увеличена в {self.num_crease} раз")

        if (self.sender().text()) == 'Изменить звук вашего видео':
            filename_Sound, filetype = QFileDialog.getOpenFileName(self,
                                                             "Выбрать файл",
                                                             ".",
                                                             "MP4 Files(*.mp4)")
            add_Sound = VideoFileClip(filename_Sound)

            main_vid = main_vid.set_audio(add_Sound.audio)
            self.changes.setText(self.changes.text() + f"\n В ваше видео добавлен звук из видео {filename_Sound}")

    def openCutChanges(self):
        global widget
        widget = QDialog()
        ui = Ui_Dialog()
        ui.setupUi(widget)
        widget.show()

        def returnToMain():
            widget.close()

        ## ui.vid_lenght.setText(vid_lenght1)

        ui.pushButton.clicked.connect(returnToMain)

    def volume_Decrease(self):
        self.num_crease = 1
        num, ok_pressed = QInputDialog.getInt(
            self, "Уменьшение громкости", "Во сколько раз вы хотите уменьшить громскость?",
            1, 1, 10, 1)
        if ok_pressed:
            self.num_crease = 1 / num

    def volume_Increase(self):
        self.num_crease = 1
        num, ok_pressed = QInputDialog.getInt(
            self, "Увеличение громкости", "Во сколько раз вы хотите увеличить громскость?",
            1, 1, 10, 1)
        if ok_pressed:
            self.num_crease = num


## Запуск программы
if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = VideoEdit()
    ex.show()
    sys.exit(app.exec_())
