class Carpet:
    def __init__(self, size, maxspeed, colors):
        self.size = size
        self.maxspeed = maxspeed
        self.colors = colors

    def change_size(self, value):
        if value + self.size < 5:
            self.size = 5
        elif value + self.size > 100:
            self.size = 100
        else:
            self.size += value

    def __ifloordiv__(self, num):
        if self.size // num < 5:
            self.size = 5
        elif self.size // num >= 5:
            self.size //= num
        self.maxspeed //= 2
        return self

    def __call__(self, separator):
        return separator.join(self.colors.split(' '))

    def __str__(self):
        return 'Carpet of size {}, rate {} and colors: {}'.format(self.size, self.maxspeed,\
                                                                  ', '.join(self.colors.split(' ')))

    def __lt__(self, other):
        tup_self = (self.max_speed, self.size, len(self.colors.split()), self.colors)
        tup_other = (other.max_speed, other.size, len(other.colors.split()), other.colors)
        return tup_self < tup_other

    def __le__(self, other):
        tup_self = (self.max_speed, self.size, len(self.colors.split()), self.colors)
        tup_other = (other.max_speed, other.size, len(other.colors.split()), other.colors)
        return tup_self <= tup_other

    def __eq__(self, other):
        tup_self = (self.max_speed, self.size, len(self.colors.split()), self.colors)
        tup_other = (other.max_speed, other.size, len(other.colors.split()), other.colors)
        return tup_self == tup_other

    def __ne__(self, other):
        return not self.__eq__(other)

    def __gt__(self, other):
        tup_self = (self.max_speed, self.size, len(self.colors.split()), self.colors)
        tup_other = (other.max_speed, other.size, len(other.colors.split()), other.colors)
        return tup_self > tup_other

    def __ge__(self, other):
        tup_self = (self.max_speed, self.size, len(self.colors.split()), self.colors)
        tup_other = (other.max_speed, other.size, len(other.colors.split()), other.colors)
        return tup_self >= tup_other
